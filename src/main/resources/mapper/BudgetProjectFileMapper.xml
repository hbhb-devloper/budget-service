<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbhb.cw.mapper.BudgetProjectFileMapper">
  <resultMap id="BaseResultMap" type="com.hbhb.cw.model.BudgetProjectFile">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="required" jdbcType="TINYINT" property="required" />
    <result column="is_approved" jdbcType="TINYINT" property="isApproved" />
    <result column="file_id" jdbcType="BIGINT" property="fileId"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="author" jdbcType="VARCHAR" property="author"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, project_id,  required, is_approved,file_id,create_time,author
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from budget_project_file
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from budget_project_file
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.hbhb.cw.model.BudgetProjectFile">
    insert into budget_project_file (id, project_id, required, is_approved,file_id,create_time,author
      )
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT},
     #{required,jdbcType=TINYINT}, #{isApproved,jdbcType=TINYINT},
     #{fileId,jdbcType=BIGINT} ,#{createTime,jdbcType=TIMESTAMP},
     #{author,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hbhb.cw.model.BudgetProjectFile">
    insert into budget_project_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="isApproved != null">
        is_approved,
      </if>
      <if test="fileId !=null">
        file_id,
      </if>
      <if test="createTime !=null">
        create_time,
      </if>
      <if test="author !=null">
        author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="required != null">
        #{required,jdbcType=TINYINT},
      </if>
      <if test="isApproved != null">
        #{isApproved,jdbcType=TINYINT},
      </if>
      <if test="fileId !=null">
        #{fileId,jdbcType=BIGINT},
      </if>
      <if test="createTime !=null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author !=null">
        #{author,jdbcType=VARCHAR}
      </if>

    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.hbhb.cw.model.BudgetProjectFile">
    update budget_project_file
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=TINYINT},
      </if>
      <if test="isApproved != null">
        is_approved = #{isApproved,jdbcType=TINYINT},
      </if>
      <if test="fileId !=null">
        file_id= #{fileId,jdbcType=BIGINT},
      </if>
      <if test="createTime !=null">
        crete_time= #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author !=null">
        author= #{author,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbhb.cw.model.BudgetProjectFile">
    update budget_project_file
    set project_id = #{projectId,jdbcType=BIGINT},
       required = #{required,jdbcType=TINYINT},
       is_approved = #{isApproved,jdbcType=TINYINT},
       file_id= #{fileId,jdbcType=BIGINT},
       crete_time= #{createTime,jdbcType=TIMESTAMP},
       author= #{author,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <insert id="insertBudgetProjectFiles" parameterType="java.util.List">
    insert into
    budget_project_file(project_id,author,is_approved,required,file_id,create_time)
    values
    <foreach collection="list" item="file" index="index" separator=",">
      (
      #{file.projectId},
      #{file.author},
      #{file.isApproved},
      #{file.required},
      #{file.fileId},
      #{file.createTime}
      )
    </foreach>
  </insert>
  <update id="updateBudgetProjectFiles" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="">
      update budget_project_file
      <set>
        <if test="item.author !=null and item.author=''">
          author =#{item.author}
        </if>
        <if test="item.createTime !=null">
          create_time =#{item.createTime}
        </if>
      </set>
      where project_id =#{projectId}
    </foreach>
  </update>
  <delete id="deleteByFileId" parameterType="java.lang.Long">
      delete budget_project_file
      from budget_project_file
               left join sys_file sf on budget_project_file.file_id = sf.id
      where file_id =#{fileId}
  </delete>

  <select id="selectCountByFileId" parameterType="java.lang.Long" resultType="java.lang.Integer">
   select count(id) from budget_project_file where file_id =#{fileId}
  </select>
    <select id="selectProjectFileByFileId"
            resultType="com.hbhb.cw.model.BudgetProjectFile">
      select
      <include refid="Base_Column_List" />
       from budget_project_file
       where file_id = #{fileId}
    </select>
  <select id="selectIdListByProjectId" resultType="java.lang.Long">
      select file_id from budget_project_file
      where project_id = #{projectId}
  </select>


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbhb.cw.mapper.BudgetProjectNoticeMapper">
  <resultMap id="BaseResultMap" type="com.hbhb.cw.model.BudgetProjectNotice">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="project_id" jdbcType="INTEGER" property="projectId"/>
    <result column="receiver" jdbcType="INTEGER" property="receiver"/>
    <result column="promoter" jdbcType="INTEGER" property="promoter"/>
    <result column="content" jdbcType="VARCHAR" property="content"/>
    <result column="state" jdbcType="INTEGER" property="state"/>
    <result column="priority" jdbcType="INTEGER" property="priority"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="flow_type_id" jdbcType="BIGINT" property="flowTypeId"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, project_id, receiver, promoter, content, state, priority, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from budget_project_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from budget_project_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hbhb.cw.model.BudgetProjectNotice">
    insert into budget_project_notice (id, project_id, receiver, 
      promoter, content, state, 
      priority, create_time,flow_type_id)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=INTEGER}, #{receiver,jdbcType=INTEGER}, 
      #{promoter,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{priority,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},#{flowTypeId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hbhb.cw.model.BudgetProjectNotice">
    insert into budget_project_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="promoter != null">
        promoter,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="flowTypeId != null">
        flow_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="promoter != null">
        #{promoter,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowTypeId != null">
        #{flowTypeId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbhb.cw.model.BudgetProjectNotice">
    update budget_project_notice
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="promoter != null">
        promoter = #{promoter,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowTypeId != null">
        flow_type_id = #{flowTypeId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbhb.cw.model.BudgetProjectNotice">
    update budget_project_notice
    set project_id = #{projectId,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=INTEGER},
      promoter = #{promoter,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      flow_type_id = #{flowTypeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateNoticeStateById">
    update budget_project_notice set state=#{state}
    where id=#{id}
  </update>

  <update id="updateByBudgetProjectId" parameterType="int">
    update budget_project_notice set state=1
    where project_id = #{projectId}
  </update>

  <select id="selectNoticeListByUserId" resultType="com.hbhb.cw.web.vo.BudgetProjectNoticeResVO">
    select priority,content,n.create_time as createTime,su.user_name as userName
    from budget_project_notice n
    left join sys_user su on su.id = n.promoter
    where receiver =#{userId}
  </select>
  <select id="selectNoticeListByCond"
    resultType="com.hbhb.cw.web.vo.BudgetProjectNoticeResVO"
    parameterType="com.hbhb.cw.web.vo.BudgetProjectNoticeVO">
    select bpn.id       as id ,
    bpn.project_id  as projectId,
    content         as content,
    ROUND(amount,2) as amount,
    flow_type_name  as flowType,
    bp.director     as userName,
    unit_name       as unitName,
    date_format(bpn.create_time, '%Y-%m-%d %H:%i:%s') as createTime,
    bp.state        as state
    from budget_project_notice bpn
    left join budget_project bp on bpn.project_id = bp.id
    left join unit u on bp.unit_id = u.id
    left join sys_user su on bpn.promoter = su.id
    left join flow_type ft on bpn.flow_type_id = ft.id
    <where >
    <if test="userId != null">
     and bpn.receiver=#{userId}
    </if>
    <if test="projectNum != null">
    and  bp.project_num like concat('%',#{projectNum},'%')
    </if>
    <if test="firstNum != null">
      and bp.amount <![CDATA[ >= ]]> #{firstNum}
    </if>
    <if test="twoNum != null">
      and bp.amount <![CDATA[ <= ]]> #{twoNum}
    </if>
    and bpn.state=0
    </where>
    order by bpn.create_time desc, bpn.state
  </select>
  <select id="countListByCond" resultType="java.lang.Integer">
    select count(bpn.id)
    from budget_project_notice bpn
    left join budget_project bp on bpn.project_id = bp.id
    left join unit u on bp.unit_id = u.id
    left join sys_user su on bpn.promoter = su.id
    left join flow_type ft on bpn.flow_type_id = ft.id
    <where >
      <if test="userId != null">
        and bpn.receiver=#{userId}
      </if>
      <if test="projectNum != null">
        and  bp.project_num like concat('%',#{projectNum},'%')
      </if>
      <if test="firstNum != null">
        and bp.amount <![CDATA[ >= ]]> #{firstNum}
      </if>
      <if test="twoNum != null">
        and bp.amount <![CDATA[ <= ]]> #{twoNum}
      </if>
      and bpn.state=0
    </where>
    order by bpn.create_time , bpn.state
  </select>
    <select id="selectCountByUserId" resultType="java.lang.Integer">
      select count(id) from budget_project_notice
      where receiver =#{userId}
      and state = 0
    </select>
    <select id="selectNoticeByUserId" resultType="com.hbhb.cw.web.vo.WorkBenchAgendaVO">
    select n.id as id  ,
            n.project_id  as projectId,
            content,
            date_format(n.create_time, '%Y-%m-%d %H:%i:%s') as date,
            su.nick_name as userName
    from budget_project_notice n
    left join sys_user su on su.id = n.promoter
    where receiver =#{userId}
    and n.state = 0;
    </select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbhb.cw.mapper.BudgetProjectAgileFileMapper">
  <resultMap id="BaseResultMap" type="com.hbhb.cw.model.BudgetProjectAgileFile">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_agile_id" jdbcType="BIGINT" property="projectAgileId" />
    <result column="required" jdbcType="TINYINT" property="required" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="file_id" jdbcType="BIGINT" property="fileId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_agile_id, required, author, create_time, file_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from budget_project_agile_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from budget_project_agile_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hbhb.cw.model.BudgetProjectAgileFile">
    insert into budget_project_agile_file (id, project_agile_id, required,
      author, create_time, file_id
      )
    values (#{id,jdbcType=BIGINT}, #{projectAgileId,jdbcType=BIGINT}, #{required,jdbcType=TINYINT},
      #{author,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{fileId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hbhb.cw.model.BudgetProjectAgileFile">
    insert into budget_project_agile_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectAgileId != null">
        project_agile_id,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectAgileId != null">
        #{projectAgileId,jdbcType=BIGINT},
      </if>
      <if test="required != null">
        #{required,jdbcType=TINYINT},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbhb.cw.model.BudgetProjectAgileFile">
    update budget_project_agile_file
    <set>
      <if test="projectAgileId != null">
        project_agile_id = #{projectAgileId,jdbcType=BIGINT},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=TINYINT},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbhb.cw.model.BudgetProjectAgileFile">
    update budget_project_agile_file
    set project_agile_id = #{projectAgileId,jdbcType=BIGINT},
      required = #{required,jdbcType=TINYINT},
      author = #{author,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      file_id = #{fileId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into
    budget_project_agile_file(project_agile_id,author,required,file_id,create_time)
    values
    <foreach collection="list" item="file" index="index" separator=",">
      (
      #{file.projectAgileId},
      #{file.author},
      #{file.required},
      #{file.fileId},
      #{file.createTime}
      )
    </foreach>
  </insert>

  <select id="selectAgileFileByFileId" resultType="com.hbhb.cw.model.BudgetProjectAgileFile">
    select
    <include refid="Base_Column_List" />
    from
    budget_project_agile_file
    where file_id = #{fileId}
  </select>

  <delete id="deleteByFileId" parameterType="java.lang.Long">
    delete from budget_project_agile_file
    where file_id =#{fileId}
  </delete>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbhb.cw.budget.mapper.BudgetProjectApprovedMapper">
    <resultMap id="BaseResultMap" type="com.hbhb.cw.budget.model.BudgetProjectApproved">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="project_num" jdbcType="VARCHAR" property="projectNum"/>
        <result column="project_name" jdbcType="VARCHAR" property="projectName"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="available_amount" jdbcType="DECIMAL" property="availableAmount"/>
        <result column="taix_incloud_amount" jdbcType="DECIMAL" property="taixIncloudAmount"/>
        <result column="cost" jdbcType="DECIMAL" property="cost"/>
        <result column="vat_rate" jdbcType="DECIMAL" property="vatRate"/>
        <result column="vat_amount" jdbcType="DECIMAL" property="vatAmount"/>
        <result column="director" jdbcType="VARCHAR" property="director"/>
    <result column="engineering_num" jdbcType="VARCHAR" property="engineeringNum" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="target" jdbcType="VARCHAR" property="target" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="flow_id" jdbcType="INTEGER" property="flowId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_num, project_name, amount, available_amount, taix_incloud_amount, cost, 
    vat_rate, vat_amount, director, engineering_num, start_time, end_time, supplier, 
    origin, introduction, detail, target, remarks, create_by, create_time, flow_id, project_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from budget_project_approved
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from budget_project_approved
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.hbhb.cw.budget.model.BudgetProjectApproved">
    insert into budget_project_approved (id, project_num, project_name, 
      amount, available_amount, taix_incloud_amount, 
      cost, vat_rate, vat_amount, 
      director, engineering_num, start_time, 
      end_time, supplier, origin, 
      introduction, detail, target, 
      remarks, create_by, create_time, 
      flow_id, project_id)
    values (#{id,jdbcType=BIGINT}, #{projectNum,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{availableAmount,jdbcType=DECIMAL}, #{taixIncloudAmount,jdbcType=DECIMAL}, 
      #{cost,jdbcType=DECIMAL}, #{vatRate,jdbcType=DECIMAL}, #{vatAmount,jdbcType=DECIMAL}, 
      #{director,jdbcType=VARCHAR}, #{engineeringNum,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{supplier,jdbcType=VARCHAR}, #{origin,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{flowId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.hbhb.cw.budget.model.BudgetProjectApproved">
        insert into budget_project_approved
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectNum != null">
                project_num,
            </if>
            <if test="projectName != null">
                project_name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="availableAmount != null">
        available_amount,
      </if>
      <if test="taixIncloudAmount != null">
        taix_incloud_amount,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="vatRate != null">
        vat_rate,
      </if>
      <if test="vatAmount != null">
        vat_amount,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="engineeringNum != null">
        engineering_num,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="target != null">
        target,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectNum != null">
        #{projectNum,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="taixIncloudAmount != null">
        #{taixIncloudAmount,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="vatRate != null">
        #{vatRate,jdbcType=DECIMAL},
      </if>
      <if test="vatAmount != null">
        #{vatAmount,jdbcType=DECIMAL},
      </if>
      <if test="director != null">
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="engineeringNum != null">
        #{engineeringNum,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hbhb.cw.budget.model.BudgetProjectApproved">
        update budget_project_approved
        <set>
            <if test="projectNum != null">
                project_num = #{projectNum,jdbcType=VARCHAR},
            </if>
            <if test="projectName != null">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        available_amount = #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="taixIncloudAmount != null">
        taix_incloud_amount = #{taixIncloudAmount,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="vatRate != null">
        vat_rate = #{vatRate,jdbcType=DECIMAL},
      </if>
      <if test="vatAmount != null">
        vat_amount = #{vatAmount,jdbcType=DECIMAL},
      </if>
      <if test="director != null">
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="engineeringNum != null">
        engineering_num = #{engineeringNum,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.hbhb.cw.budget.model.BudgetProjectApproved">
    update budget_project_approved
    set project_num = #{projectNum,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      available_amount = #{availableAmount,jdbcType=DECIMAL},
      taix_incloud_amount = #{taixIncloudAmount,jdbcType=DECIMAL},
      cost = #{cost,jdbcType=DECIMAL},
      vat_rate = #{vatRate,jdbcType=DECIMAL},
      vat_amount = #{vatAmount,jdbcType=DECIMAL},
      director = #{director,jdbcType=VARCHAR},
      engineering_num = #{engineeringNum,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      supplier = #{supplier,jdbcType=VARCHAR},
      origin = #{origin,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      target = #{target,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      flow_id = #{flowId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <delete id="deleteByProjectId" parameterType="integer">
    delete from budget_project_approved
    where project_id = #{projectId}
  </delete>


  <select id="selectByProjectId" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  budget_project_approved
    where project_id = #{projectId}
  </select>

    <resultMap id="projectFile" type="com.hbhb.cw.budget.web.vo.BudgetProjectDetailVO">
        <id column="id" property="id"/>
        <id column="budgetId" property="budgetId"/>
        <id column="unitId" property="unitId"/>
        <id column="num" property="projectNum"/>
        <id column="projectName" property="projectName"/>
        <id column="amount" property="amount"/>
        <id column="avamount" property="availableAmount"/>
        <id column="vatAmount" property="vatAmount"/>
        <id column="tiamount" property="taxIncludeAmount"/>
        <id column="cost" property="cost"/>
    <id column="vatrate" property="vatRate"/>
    <id column="director" property="director"/>
    <id column="enum" property="engineeringNum"/>
    <id column="stime" property="startTime"/>
    <id column="etime" property="endTime"/>
    <id column="supplier" property="supplier"/>
    <id column="origin" property="origin"/>
    <id column="introduction" property="introduction"/>
    <id column="detail" property="detail"/>
    <id column="target" property="target"/>
    <id column="createTime" property="createTime"/>
    <id column="remark" property="remark"/>
    <id column="state" property="state"/>
        <collection property="files" ofType="com.hbhb.cw.budget.web.vo.BudgetProjectFileVO" column="id">
            <result column="fileId" property="fileId"/>
            <result column="fileName" property="fileName"/>
            <result column="fileSize" property="fileSize"/>
            <result column="filePath" property="filePath"/>
            <result column="required" property="required"/>
            <result column="author" property="author"/>
            <result column="times" property="createTime"/>
            <result column="isApproved" property="isApproved"/>
        </collection>
  </resultMap>
    <select id="selectProjectApprovedByProjectId" parameterType="com.hbhb.cw.budget.web.vo.BudgetProjectDetailVO"
            resultMap="projectFile">
    select sf.id                                 as fileId,
    sf.file_name                             as fileName,
    sf.file_size                             as fileSize,
    sf.file_path                             as filePath,
    bpf.required                             as required,
    bpf.author                               as author,
    bpf.is_approved                          as isApproAved,
    date_format(bpf.create_time, '%Y-%m-%d') as times,
    bp.project_id                            as id,
    bp.project_num                           as num,
    bp.project_name                          as projectName,
    bp.amount                                as amount,
    bp.vat_amount                            as vatAmount,
    bp.available_amount                      as avamount,
    bp.taix_incloud_amount                   as tiamount,
    bp.cost                                  as cost,
    bp.vat_rate                              as vatrate,
    bp.director                              as director,
    bp.engineering_num                       as enum,
    date_format(bp.start_time, '%Y-%m-%d')   as stime,
    date_format(bp.end_time, '%Y-%m-%d')     as etime,
    bp.supplier                              as supplier,
    bp.origin                                as origin,
    bp.introduction                          as introduction,
    bp.detail                                as detail,
    bp.target                                as target,
    bp.remarks                               as remark,
    date_format( bp.create_time, '%Y')                         as createTime,
    bp.state                                 as state
    from budget_project_approved bp
    left join budget_project_file bpf
    on bp.project_id = bpf.project_id
    left join sys_file sf on bpf.file_id = sf.id
    where bp.project_id = #{id}
  </select>

</mapper>